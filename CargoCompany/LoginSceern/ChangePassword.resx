<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        dZ1wwv8Byjk2NXgu9AkAAAAASUVORK5CYII=
</value>
  </data>
</root>